#BlueJ class context
comment0.params=
comment0.target=ListaTareas()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ ListaTareas\r\n
comment1.params=nuevaTarea
comment1.target=void\ addTarea(java.lang.String)
comment1.text=\r\n\ Permite\ a\u00F1adir\ una\ nueva\ tarea\r\n
comment10.params=numTareas
comment10.target=void\ mostrarPrimerasTareas(int)
comment10.text=\r\n\ muestra\ las\ primeras\ n\ tareas\ indicadas\ como\ par\u00E1metro.\ En\ caso\ de\ que\ \r\n\ haya\ menos\ tareas\ de\ n\ tareas\ se\ muestran\ todas.\r\n
comment11.params=textoABuscar
comment11.target=int\ hayTareasCoincidentes(java.lang.String)
comment11.text=\r\n\ devuelve\ la\ posici\u00F3n(desde\ 0)\ de\ la\ primera\ tarea\ que\ contiene\ el\ texto\ indicado\ como\ par\u00E1metro.\r\n\ -1\ en\ caso\ contrario.\ \ NO\ MUESTRA\ NADA\ POR\ PANTALLA.\r\n
comment12.params=
comment12.target=void\ mostrarTarea22()
comment12.text=\r\n\ muestra\ todas\ las\ tareas\ con\ un\ bucle\ while.\ (las\ muestra\ numeradas.)\r\n
comment13.params=numeroTarea
comment13.target=void\ marcaComoCompletada(int)
comment13.text=\r\n\ mt\ que\ marca\ una\ tarea\ como\ completada.\r\n
comment2.params=
comment2.target=int\ getNumeroTareas()
comment2.text=\r\n\ Devuelve\ el\ numero\ de\ tareas\ existentes\r\n
comment3.params=posicion
comment3.target=void\ eliminaTarea(int)
comment3.text=\r\n\ Elimina\ la\ tarea\ que\ ocupa\ la\ posicion\ indicada.\r\n\ Si\ la\ posicion\ indicada\ no\ es\ valida,\ no\ hace\ nada\r\n\ El\ mt\ supone\ que\ un\ valor\ de\ 1\ en\ el\ par\u00E1metro\ indica\ la\ primera\ tarea,\ 2\ la\ segunda,\ etc.\r\n
comment4.params=valor
comment4.target=boolean\ esValidoElIndice(int)
comment4.text=\r\n\ mt\ para\ comprobar\ si\ un\ \u00EDndice\ es\ v\u00E1lido\ y\ devuelve\ true\ en\ caso\ de\ afirmativo\r\n\ o\ false\ en\ otro\ caso\r\n
comment5.params=
comment5.target=boolean\ hayTareasPendientes()
comment5.text=\r\n\ mt\ que\ devuelve\ true\ en\ caso\ de\ que\ \ haya\ tareas\ por\ hacer,\ false\ en\ otro\ caso.\r\n
comment6.params=
comment6.target=void\ verTareas()
comment6.text=\r\n\ Imprime\ por\ pantalla\ todas\ las\ tareas\ guardadas\r\n
comment7.params=
comment7.target=void\ mostraTareas()
comment7.text=\r\n\ mt\ para\ imprimir\ todas\ las\ tareas\ existentes,\ una\ por\ una.\r\n
comment8.params=
comment8.target=void\ mostraTareas2()
comment8.text=\r\n\ mt\ para\ imprimir\ todas\ las\ tareas\ existentes,\ una\ por\ una.\r\n\ el\ metodo\ imprime\ las\ tareas\ numeradas.\r\n
comment9.params=texto
comment9.target=void\ mostrarTareasConIncidentes(java.lang.String)
comment9.text=\r\n\ mt\ que\ muestra\ todas\ las\ tareas\ que\ tengan\ un\ determinado\ texto\ pasado\ como\ par\u00E1metro\r\n\ con\ su\ numeraci\u00F3n\ \ asociada\ correcta.\ Si\ no\ hay\ ninguna\ tarea\ que\ contenga\ el\ texto\ indicado,\r\n\ muestra\ mensaje\ de\ error.\r\n\ Si\ hay\ tareas\ coincidentes\ se\ muestra\ detr\u00E1s\ de\ la\ lista\ el\ n\u00BA\ de\ coincidencias\ \r\n
numComments=14
